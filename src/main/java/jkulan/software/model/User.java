package jkulan.software.model;

import java.util.Collection;
import java.util.Collections;
import java.util.HashSet;
import java.util.Set;
import java.util.UUID;

import javax.persistence.Column;
import javax.persistence.ElementCollection;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.Table;

import org.springframework.security.core.GrantedAuthority;
import org.springframework.security.core.authority.SimpleGrantedAuthority;
import org.springframework.security.core.userdetails.UserDetails;

/**
 * Created by tth on 1/18/16.
 */
@javax.persistence.Entity
@Table(name = "users")
public class User implements UserDetails, Entity {
	// ------------------------
    // PRIVATE FIELDS
    // ------------------------
	private static final long serialVersionUID = -4287369228961135890L;

	// An autogenerated id (unique for each jkulan.software.model in the db)
    @Id
    @GeneratedValue(strategy = GenerationType.AUTO)
    private long id;

    // The jkulan.software.model's name
    @Column(unique = true, length = 32, nullable = false)
    private String name;
    
    @ElementCollection(fetch = FetchType.EAGER)
	private Set<String> roles = new HashSet<String>();
    
    // The jkulan.software.model's address
    private String address;

    private String email;

    @Column(length = 80, nullable = false)
	private String password;
    @Column(length = 80, nullable = true)
    private String steamId;
    @Column(length = 80, nullable = false)
    private String uuid;
    
    public String getUuid() {
		return uuid;
	}

	public void setUuid(String uuid) {
		this.uuid = uuid;
	}

	// ------------------------
    // PUBLIC METHODS
    // ------------------------
	public User(String name, Set<String> roles, String address,
			String email, String password) {
		super();
		this.name = name;
		this.roles = roles;
		this.address = address;
		this.email = email;
		this.password = password;
	}
    
    public User() {
    	this.uuid = UUID.randomUUID().toString();
    }

    public User(long id) {
        this.id = id;
    }

    public long getId() {
        return id;
    }

    public void setId(long id) {
        this.id = id;
    }

    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public String getAddress() {
        return address;
    }

    public void setAddress(String address) {
        this.address = address;
    }
    
	public Set<String> getRoles() {
		return roles;
	}

	public void setRoles(Set<String> roles) {
		this.roles = roles;
	}

	public String getEmail() {
		return email;
	}

	public void setEmail(String email) {
		this.email = email;
	}
    
    @Override
	public String getPassword()
	{
		return this.password;
	}

	public void setPassword(String password)
	{
		this.password = password;
	}
	
    @Override
	public String getUsername()
	{
		return this.name;
	}


	@Override
	public boolean isAccountNonExpired()
	{
		return true;
	}


	@Override
	public boolean isAccountNonLocked()
	{
		return true;
	}


	@Override
	public boolean isCredentialsNonExpired()
	{
		return true;
	}


	@Override
	public boolean isEnabled()
	{
		return true;
	}
	
	@Override
	public Collection<? extends GrantedAuthority> getAuthorities()
	{
		final Set<GrantedAuthority> authorities = new HashSet<GrantedAuthority>();
		final Set<String> roles = this.getRoles();

		if (!isComplete()) {
			// We're missing required info
			authorities.add(new SimpleGrantedAuthority("ROLE_PRE_AUTH"));
			return authorities;
		}
		
		if (roles == null) {
			return Collections.emptyList();
		}

		for (String role : roles) {
			authorities.add(new SimpleGrantedAuthority(role));
		}

		return authorities;
	}

	@Override
	public String toString() {
		return "User [id=" + id + ", name=" + name + ", roles=" + roles
				+ ", address=" + address + ", email=" + email + ", steamId="+ steamId +", password="
				+ (password != null) + ", grantedAuthorities="+getAuthorities()+"]";
	}

	public String getSteamId() {
		return steamId;
	}

	public void setSteamId(String steamId) {
		this.steamId = steamId;
	}
	public boolean isComplete() {
		return steamId != null && email != null;
	}
	public void completeUser(User user) {
		if (user != null) {
			if (steamId == null && user.getSteamId() != null) {
				steamId = user.getSteamId();
			}
			if (email == null && user.getEmail() != null) {
				email = user.getEmail();
			}
		}
	}
}
